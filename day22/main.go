package main

import (
	"fmt"
	"math"
	"strings"

	"github.com/mbark/advent-of-code-2022/maps"
	"github.com/mbark/advent-of-code-2022/maths"
	"github.com/mbark/advent-of-code-2022/util"
)

func main() {
	groups := util.ReadInput(Input, "\n\n")
	m := make(map[maps.Coordinate]terrain)
	for y, row := range strings.Split(groups[0], "\n") {
		for x, c := range row {
			if c == ' ' {
				continue
			}

			m[maps.Coordinate{X: x, Y: y}] = terrain(c)
		}
	}

	var s []byte
	var instructions []instruction
	for _, c := range groups[1] {
		if '0' <= c && c <= '9' {
			s = append(s, byte(c))
		} else {
			var direction maps.Direction
			switch byte(c) {
			case 'L':
				direction = maps.Left
			case 'R':
				direction = maps.Right
			}

			instructions = append(instructions, instruction{move: util.ParseInt[int](string(s)), rotate: direction})
			s = nil
		}
	}
	instructions = append(instructions, instruction{move: util.ParseInt[int](string(s))})

	fmt.Printf("first: %d\n", first(m, instructions))
	fmt.Printf("second: %d\n", second(m, instructions))
}

func first(m map[maps.Coordinate]terrain, instructions []instruction) int {
	minX, maxX := make(map[int]int), make(map[int]int)
	minY, maxY := make(map[int]int), make(map[int]int)

	for c := range m {
		if _, ok := minX[c.Y]; !ok {
			minX[c.Y] = math.MaxInt
		}
		if _, ok := minY[c.X]; !ok {
			minY[c.X] = math.MaxInt
		}

		minX[c.Y] = maths.MinInt(minX[c.Y], c.X)
		minY[c.X] = maths.MinInt(minY[c.X], c.Y)
		maxX[c.Y] = maths.MaxInt(maxX[c.Y], c.X)
		maxY[c.X] = maths.MaxInt(maxY[c.X], c.Y)
	}

	wrap := func(_, next maps.Coordinate, direction maps.Direction) (maps.Coordinate, maps.Direction) {
		switch direction {
		case maps.Left:
			return maps.Coordinate{X: maxX[next.Y], Y: next.Y}, direction
		case maps.Right:
			return maps.Coordinate{X: minX[next.Y], Y: next.Y}, direction
		case maps.Up:
			return maps.Coordinate{X: next.X, Y: maxY[next.X]}, direction
		case maps.Down:
			return maps.Coordinate{X: next.X, Y: minY[next.X]}, direction

		default:
			return next, direction
		}
	}

	return walk(m, instructions, wrap)
}

func sideLength(m map[maps.Coordinate]terrain) int {
	total := len(m)
	size := total / 6
	return int(math.Floor(math.Sqrt(float64(size))))
}

func second(m map[maps.Coordinate]terrain, instructions []instruction) int {
	length := sideLength(m)
	bySegment := make(map[maps.Coordinate]*segment)

	var maxY, maxX int
	for c := range m {
		maxX = maths.MaxInt(maxX, c.X)
		maxY = maths.MaxInt(maxY, c.Y)
	}

	var segments []*segment
	for y := 0; y <= maxY; y++ {
		for x := 0; x <= maxX; x++ {
			if _, ok := m[maps.Coordinate{X: x, Y: y}]; !ok {
				continue
			}

			if _, ok := bySegment[maps.Coordinate{X: x, Y: y}]; ok {
				continue
			}

			s := toSegment(m, y, x, length)
			for c := range s.toRelative {
				bySegment[c] = s
			}

			segments = append(segments, s)
		}
	}

	for i, s1 := range segments {
		for j, s2 := range segments {
			if i == j {
				continue
			}

			switch {
			case s1.startX == s2.startX && maths.AbsInt(s1.startY-s2.startY) == length:
				if s1.startY < s2.startY {
					s1.down = s2
				} else {
					s1.up = s2
				}

			case s1.startY == s2.startY && maths.AbsInt(s1.startX-s2.startX) == length:
				if s1.startX < s2.startX {
					s1.right = s2
				} else {
					s1.left = s2
				}
			}
		}
	}

	c := cube[*segment]{d1: segments[0]}

	for c.d1 == nil || c.d2 == nil || c.d3 == nil || c.d4 == nil || c.d5 == nil || c.d6 == nil {
		s := c.d1
		if s != nil {
			if s.down != nil {
				c.d4 = s.down
			}
			if s.up != nil {
				c.d3 = s.up
			}
			if s.left != nil {
				c.d2 = s.left
			}
			if s.right != nil {
				c.d5 = s.right
			}
		}

		s = c.d2
		if s != nil {
			if s.down != nil {
				c.d3 = s.down
			}
			if s.up != nil {
				c.d4 = s.up
			}
			if s.left != nil {
				c.d1 = s.left
			}
			if s.right != nil {
				c.d2 = s.right
			}
		}

		s = c.d3
		if s != nil {
			if s.down != nil {
				c.d5 = s.down
			}
			if s.up != nil {
				c.d2 = s.up
			}
			if s.left != nil {
				c.d2 = s.left
			}
			if s.right != nil {
				c.d6 = s.right
			}
		}

		s = c.d4
		if s != nil {
			if s.down != nil {
				c.d6 = s.down
			}
			if s.up != nil {
				c.d1 = s.up
			}
			if s.left != nil {
				c.d2 = s.left
			}
			if s.right != nil {
				c.d5 = s.right
			}
		}

		s = c.d5
		if s != nil {
			if s.down != nil {
				c.d4 = s.down
			}
			if s.up != nil {
				c.d3 = s.up
			}
			if s.left != nil {
				c.d1 = s.left
			}
			if s.right != nil {
				c.d6 = s.right
			}
		}

		s = c.d6
		if s != nil {
			if s.down != nil {
				c.d3 = s.down
			}
			if s.up != nil {
				c.d4 = s.up
			}
			if s.left != nil {
				c.d2 = s.left
			}
			if s.right != nil {
				c.d5 = s.right
			}
		}
	}

	c.d1.down = c.d4
	c.d1.up = c.d3
	c.d1.left = c.d2
	c.d1.right = c.d5

	c.d2.down = c.d3
	c.d2.up = c.d4
	c.d2.left = c.d1
	c.d2.right = c.d6

	c.d3.down = c.d5
	c.d3.up = c.d2
	c.d3.left = c.d1
	c.d3.right = c.d6

	c.d4.down = c.d6
	c.d4.up = c.d1
	c.d4.left = c.d2
	c.d4.right = c.d5

	c.d5.down = c.d4
	c.d5.up = c.d3
	c.d5.left = c.d1
	c.d5.right = c.d6

	c.d6.down = c.d3
	c.d6.up = c.d4
	c.d6.left = c.d2
	c.d6.right = c.d5

	c.d1.id = "1"
	c.d2.id = "2"
	c.d3.id = "3"
	c.d4.id = "4"
	c.d5.id = "5"
	c.d6.id = "6"

	wrap := func(at, _ maps.Coordinate, direction maps.Direction) (maps.Coordinate, maps.Direction) {
		s := bySegment[at]
		at = s.toRelative[at]

		var nexts *segment
		switch direction {
		case maps.Left:
			nexts = s.left
		case maps.Right:
			nexts = s.right
		case maps.Up:
			nexts = s.up
		case maps.Down:
			nexts = s.down
		}

		var nextc maps.Coordinate
		var nextdir maps.Direction
		switch s {
		case c.d1:
			switch direction {
			case maps.Down:
				nextc = maps.Coordinate{X: at.X, Y: 0}
				nextdir = maps.Down
			case maps.Up:
				nextc = maps.Coordinate{X: 0, Y: at.X}
				nextdir = maps.Right
			case maps.Left:
				nextc = maps.Coordinate{X: 0, Y: maths.AbsInt(length - 1 - at.Y)}
				nextdir = maps.Right
			case maps.Right:
				nextc = maps.Coordinate{X: 0, Y: at.Y}
				nextdir = maps.Right
			}
		case c.d2:
			switch direction {
			case maps.Down:
				nextc = maps.Coordinate{X: at.X, Y: 0}
				nextdir = maps.Down
			case maps.Up:
				nextc = maps.Coordinate{X: 0, Y: at.X}
				nextdir = maps.Right
			case maps.Left:
				nextc = maps.Coordinate{X: 0, Y: maths.AbsInt(length - 1 - at.Y)}
				nextdir = maps.Right
			case maps.Right:
				nextc = maps.Coordinate{X: 0, Y: at.Y}
				nextdir = maps.Right
			}
		case c.d3:
			switch direction {
			case maps.Down:
				nextc = maps.Coordinate{X: at.X, Y: 0}
				nextdir = maps.Down
			case maps.Up:
				nextc = maps.Coordinate{X: at.X, Y: length - 1}
				nextdir = maps.Up
			case maps.Left:
				nextc = maps.Coordinate{X: at.Y, Y: 0}
				nextdir = maps.Down
			case maps.Right:
				nextc = maps.Coordinate{X: at.Y, Y: length - 1}
				nextdir = maps.Up
			}
		case c.d4:
			switch direction {
			case maps.Down:
				nextc = maps.Coordinate{X: at.X, Y: 0}
				nextdir = maps.Down
			case maps.Up:
				nextc = maps.Coordinate{X: at.X, Y: length - 1}
				nextdir = maps.Up
			case maps.Left:
				nextc = maps.Coordinate{X: at.Y, Y: 0}
				nextdir = maps.Down
			case maps.Right:
				nextc = maps.Coordinate{X: at.Y, Y: length - 1}
				nextdir = maps.Up
			}
		case c.d5:
			switch direction {
			case maps.Down:
				nextc = maps.Coordinate{X: length - 1, Y: at.X}
				nextdir = maps.Left
			case maps.Up:
				nextc = maps.Coordinate{X: at.X, Y: length - 1}
				nextdir = maps.Up
			case maps.Left:
				nextc = maps.Coordinate{X: length - 1, Y: maths.AbsInt(length - 1 - at.Y)}
				nextdir = maps.Left
			case maps.Right:
				nextc = maps.Coordinate{X: length - 1, Y: maths.AbsInt(length - 1 - at.Y)}
				nextdir = maps.Left
			}
		case c.d6:
			switch direction {
			case maps.Down:
				nextc = maps.Coordinate{X: length - 1, Y: at.X}
				nextdir = maps.Left
			case maps.Up:
				nextc = maps.Coordinate{X: at.X, Y: length - 1}
				nextdir = maps.Up
			case maps.Left:
				nextc = maps.Coordinate{X: length - 1, Y: at.Y}
				nextdir = maps.Left
			case maps.Right:
				nextc = maps.Coordinate{X: length - 1, Y: maths.AbsInt(length - 1 - at.Y)}
				nextdir = maps.Left
			}
		}

		return nexts.toAbsolute[nextc], nextdir
	}

	return walk(m, instructions, wrap)
}

type cube[T any] struct {
	d1, d2, d3, d4, d5, d6 T
}

func (c cube[T]) String() string {
	return fmt.Sprintf("d1\n%s\n d2\n%s\n d3\n%s\n d4\n%s\n d5\n%s\n d6\n%s\n",
		c.d1, c.d2, c.d3, c.d4, c.d5, c.d6)
}

func toSegment(m map[maps.Coordinate]terrain, yStart, xStart, length int) *segment {
	coords := make(map[maps.Coordinate]terrain)
	mapping := make(map[maps.Coordinate]maps.Coordinate)
	for y := 0; y < length; y++ {
		for x := 0; x < length; x++ {
			relative := maps.Coordinate{X: x, Y: y}
			absolute := maps.Coordinate{X: xStart + x, Y: yStart + y}
			coords[relative] = m[absolute]
			mapping[relative] = absolute
		}
	}

	toRelative, toAbsolute := make(map[maps.Coordinate]maps.Coordinate), make(map[maps.Coordinate]maps.Coordinate)
	for rel, abs := range mapping {
		toRelative[abs] = rel
		toAbsolute[rel] = abs
	}

	return &segment{
		startY: yStart, startX: xStart,
		endY: yStart + length - 1, endX: xStart + length - 1,
		coordinates: coords,
		toRelative:  toRelative,
		toAbsolute:  toAbsolute,
	}
}

type segment struct {
	id                         string
	startX, startY, endX, endY int
	coordinates                map[maps.Coordinate]terrain
	toRelative                 map[maps.Coordinate]maps.Coordinate
	toAbsolute                 map[maps.Coordinate]maps.Coordinate
	up, down, left, right      *segment
}

func (s segment) String() string {
	return fmt.Sprintf("Segment d%s\n%s", s.id, maps.MapFromCoordinates(s.coordinates).String())

}

func walk(m map[maps.Coordinate]terrain, instructions []instruction, wrap func(at, next maps.Coordinate, direction maps.Direction) (maps.Coordinate, maps.Direction)) int {
	minX := math.MaxInt
	for c := range m {
		if c.Y == 0 {
			minX = maths.MinInt(minX, c.X)
		}
	}
	at := maps.Coordinate{X: minX, Y: 0}

	draw := make(map[maps.Coordinate]path)
	for c, t := range m {
		draw[c] = path{terrain: t}
	}

	direction := maps.Right
	for _, ins := range instructions {
		var done bool
		for i := 1; i <= ins.move && !done; i++ {
			draw[at] = path{direction: direction}

			next := direction.Apply(at)
			t, ok := m[next]
			nextDirection := direction
			if !ok {
				next, nextDirection = wrap(at, next, direction)
				t = m[next]

				{
					backwards, dir := wrap(next, at, nextDirection.Opposite())
					if backwards != at {
						fmt.Println("at", at, "back", backwards)
						panic("backwards coordinate didn't work")
					}
					if dir != direction.Opposite() {
						fmt.Println("dir", direction, "back", dir)
						panic("backwards direction didn't work")
					}
				}
			}

			switch {
			case t == empty:
				at = next
				direction = nextDirection
			case t == rock:
				done = true
			default:
				panic("unexpected terrain")
			}
		}

		direction = direction.Rotate(ins.rotate)
	}

	var facing int
	switch direction {
	case maps.Right:
		facing = 0
	case maps.Down:
		facing = 1
	case maps.Left:
		facing = 2
	case maps.Up:
		facing = 3
	}

	fmt.Println(maps.MapFromCoordinates(draw))
	return 1000*(at.Y+1) + 4*(at.X+1) + facing
}

type instruction struct {
	move   int
	rotate maps.Direction
}

func (i instruction) String() string {
	var letter string
	switch i.rotate {
	case maps.Left:
		letter = "L"
	case maps.Right:
		letter = "R"
	}

	return fmt.Sprintf("%d%s", i.move, letter)
}

type path struct {
	terrain   terrain
	direction maps.Direction
}

func (p path) String() string {
	if p.terrain > 0 {
		return p.terrain.String()
	}
	if s := p.direction.String(); s != "" {
		return s
	}

	return " "
}

type terrain int32

const (
	rock  terrain = '#'
	empty terrain = '.'
)

func (t terrain) String() string {
	if t == 0 {
		return " "
	}

	return string(byte(t))
}

const testInput = `
        ...#
        .#..
        #...
        ....
...#.......#
........#...
..#....#....
..........#.
        ...#....
        .....#..
        .#......
        ......#.

10R5L5R10L4R5L5`

const Input = `
                                                  ..........##..#...#...............#.........#.#..........................#.....#..#..#..#.........##
                                                  #..#......#..#...........#.##................................#......#....#........#...............#.
                                                  ..............#.#..................#................#....................##..#..........#...........
                                                  .....#...........##..#..............................#......................#................#.......
                                                  ......#......#.................##........#.......#.............#.....#..#............#..............
                                                  #...........#....#.#.#.........#...............#............#....#.........#........................
                                                  #................#........................##........#.....#....#.........#...#.#....................
                                                  ..................#.............#......#..........#...................#...............#...#.........
                                                  ......#..........#.##...#..#...........#.....#...#...............##.........#.................#.....
                                                  .#..##..#..##........#...##..........#.##....#............#........................#................
                                                  .............#..#...#........#........#.....#...#................#.........#.....#..##..............
                                                  ....................#....#................#.........#........#.##...............#...#...........#...
                                                  ........#....#.......#..#.......#.....#.........................#......#.#..#.............#.........
                                                  .......#.......#.#....#..........#.......#........#........#..#.....#...............................
                                                  ..#....#......#.......#......#...........#......#.............#.................................#...
                                                  .#.#.........#.....................##...............##................#................#....#.......
                                                  ...................#...........#..............................##..#...........#...#.................
                                                  .................#...........##..........#............#..........##.#...#............#........#.....
                                                  ..........##...#.......#..........#....#..............#.##..........#.#....#...........#............
                                                  #...#...#....#.....................#..................#.........#...#.........#...........###.......
                                                  ....#...........##.....#..#........#...............#............#.#...........................#.....
                                                  ...........#....#.#......#.............#............#......#........................................
                                                  ................#..........#.........#......#...#............#..........#..#......#...........#....#
                                                  .........................#............#...#...........#..........#...#..........#.......#.......#...
                                                  ...........##...........#...##..#....#.......#....#.#.................................#............#
                                                  ......#.........#...........................#..#.......#.....##.....#........##.........#..........#
                                                  ...#..#....................#........#.#.#.#..........#.....#.#...........................#.##.......
                                                  #..#.......#........................#...............#.......#...........#................#..........
                                                  ........#...............#...#....#...............#......##.....#......................#.............
                                                  ....................#.#......#..........#....#...#.......##......#..#....#.#...#..............#..#..
                                                  ...##.#.#...##...........#......#.#.....................##.#....................#...................
                                                  .....................##...#....................#..#...........#..........#.#..##.....#........#...#.
                                                  ..##.#......#......#......................###.#..............#......#.#..........#.#....#..#...#....
                                                  .#.....#.......#..#......................................#..#..#.#........#..#......................
                                                  .#.#......#....#.............................#..............##.......##.#....#...#..................
                                                  #...........#.#.......#..#...........#.....#...............#.........#.......#......#..#............
                                                  ..........................................#.........#..........#.#..#...#............#....#.........
                                                  .#...............#...#...................#.....#..#.....#..........#................................
                                                  ......#...#..#............................#............#..#.......................................#.
                                                  .......................###...........................#.....#......#..............#....#...........#.
                                                  ..#.......#.................#......##...#.............#...#........#.....#...................#.....#
                                                  .........................#.........#...............#.#...........................#.....#.......#....
                                                  #..#....................#.#............................#....#..#.......#....#.......................
                                                  ..........#...............#......................#....#............................#...........#....
                                                  .#..............#...#......##.#.....................................#...#..#..#........#..#.....#...
                                                  #..............................#.........#..........#...............#...#.....#...#....#............
                                                  .........#........................................#......#........#..........#..................#...
                                                  .................#........#............#.................#............#.....#.........#..#.#.#......
                                                  ..#............#...........#.#...##.......#.......#.##.....#...................#.#.........#.#......
                                                  #...............#....................##.....##...........#.........#....##..............#..........#
                                                  ..................................................
                                                  ...........#....#................#................
                                                  .#............#..............#...##....#..........
                                                  ........#...#.......#..........#.....#.#..........
                                                  .............................................#....
                                                  .......#.#..........................#.............
                                                  ......#................#.......#..............#...
                                                  .......#..#................................##.....
                                                  ......#...............#....#......................
                                                  ....###..##..................#......#....#........
                                                  ....##..#.##......#..#.....#......#...............
                                                  .........................##........#..#...........
                                                  .................#........#...#..........#......#.
                                                  ...........#.........#.............#....#..#......
                                                  .........#.#........#.............................
                                                  ...#.....#....#.....................#....#.....#..
                                                  .#.......#...............#....#........##...#.....
                                                  .....#.....................................##.....
                                                  .............#......#...#......#............#.....
                                                  #..........#..#.....#..............#..#...........
                                                  .......#...........##.........#.#.....#......#....
                                                  ...........#...#....#...................#.........
                                                  ......#..#.....#.#..................#...#...#....#
                                                  ..........................................#...#...
                                                  ............................##..............#..#..
                                                  ......#............................#...#......#...
                                                  ...#................##......#.......#.#........#..
                                                  .....#............#...#.##....#......#............
                                                  ..#..#............#................##.............
                                                  #.....#......#................#.#..#............#.
                                                  ....................................#.......#....#
                                                  ...#...#..............#.........#.........##......
                                                  #.......#.#.............#......#...............#..
                                                  .............#.......#......#..#.....##...........
                                                  ...........................#.#.......#.......#..#.
                                                  #......#.............#.#.......................##.
                                                  .#......................#.............#......#....
                                                  ....#.........#......................#..........#.
                                                  ......#...#...........##...#......................
                                                  .......#...#..........#.......#.....#.....#.......
                                                  .......#.....#.......................#............
                                                  ......#..........#..............#......#..........
                                                  ..#..##..............#....#........#..............
                                                  .................#..#......#.#.#....#........##.#.
                                                  #.............#...##...........#.#.#.#........#..#
                                                  .....#..#....#....##............#...........##....
                                                  ..............#..#...#...#...............##.......
                                                  ..#........#..#............................#.#....
                                                  #........#..........#...........#.................
                                                  .................#..#.....#..................#..#.
............#.......#.............#...#.........#....#..#.#...........##........#............#...#..
#....................#.#....................#........#..........#.##........#.....#..#.........#..#.
..............##...#......#..#..........................#.........................#............#....
...............#......#................#.......#..........##....#....................#..............
#................#..#.............##....#..#............#..........#.......#.##.........#...........
......................#...#....#...................#........#.......#..##......................#....
......#......#.#....#........#..................#........................#............#.....#..#....
..................#......#.#........#.#..........##............................#......#.............
.......................#..#........#............##..................#.....##........#..............#
.....#..........................#......##........................#..##.#...........................#
#......#..........#..#......#......#..................#.#...................................#....#..
...#.......##...#......................#..............#............#....#.....#...........#.........
....#....#.##............#.........................#....................................#.....#.....
..............#......................#...............#..#...#..................#...........#....#...
...................#.......#...#.........#..............#.....#............#................#..#....
..........###..........................................#...#........................#........#...#..
.........................#...........#....#...........#...................#...#............#....#...
.................#..#..##......#..#........#..............#.....#.............................#....#
....#...............#......#.......#.............#...................#.....................##..#....
..............#............#..................#.#......#.........#.....#.................#..........
....#.........##.#...#.........##...................##......#...#...#...............................
............##..#................#.....................#......#.....#............................##.
...#.........................................................#.#.#....#.............................
........#...#.......#................#.......................#..#...................................
.................#..........................#........................#...........#..............#...
...................#....#...................#.........#............#.....................#....#.....
...........#........................#.....#...................#......................#..#......##...
#.#......#....#......#.#............#..............#..........#.#................#..........#.......
##..........................................#..........#......#................................#....
..##.#........#.....#.##..#..#........#....#...#.#....#.#......#....#..#...............#......#.....
..........##...............#.......#....................#....#..........#....#...........#.....#....
......##......#...#..##.........................................................#...................
...#...............#.#..................#.......##....................#.....#...#.........#.......#.
..................#.#...#.#........#...#...#..##....#.........#.....#..#................#.......#...
..........#.#......#....##.................##...............#....#..............................#...
....#...........#.....................#..................#........#...................#............#
..#....#............#.#.....................................#..................#..............#.#.#.
............................#......#................#.....#...#......#..................#...........
#..............#..#.........#...........................#..#..............#.....#.............#.....
......#...............#..................#.......#.........#.....#..................#.....#......##.
..#................#..........#..........#.........#.##.##..#.......#..#.#.......................#..
.....#.....##...................................#.#.#....#..........#.........#.#.........#.#.......
....#....................#.....#.##........#...............#....#...#..........#..........#.........
...#.........#.............#....#...................................##..............................
#......#..............#......#.............#.......................##.#...#............#.....#.#....
........#.......#.##......#.........................#.....#..#..#....#.................#......#.....
......##...#...................................###.................###................#.......#...#.
..##...................#......#.......#..#........#.....#.....##...#.#.................#......#.....
..................#..........#...........#.........#.....#....#......................##.......#.....
........#.......................#..............#.....#...#.......#..#...#.#..............#..........
....................####....###...#..#............
#.....................#...........................
........#...#..................#.......#..........
................................#..............##.
.............................#....................
......#......................#.....#.#.#.....#....
...................#....................#.#.......
...........#.........#.....#.##..#......#.#.......
...#........#....................#...#..##.....##.
.....#......#.............#...#.........#........#
...#.#...................#.........#......#.......
.................................................#
..#................................#.........#.#..
.......#..#.......#...#......#.....#..............
.....#..................................#....#....
....#...#......#......##..#.............#.........
...........#...........#..#.......................
......#..#....#.....#.........#..#.........#......
...............#..........#......................#
................................#.................
.............#..........#...#............#........
............#..............#....#.....##..........
.............#................#.#......#.......#..
.#.....#...........................#.##..........#
..............#..........#.##.##........##........
#.......#..................#.......#..#...........
...................#.#....................#.#.....
.....#............................................
.................#....#................#......#...
.......................#..#.....#..#...........#..
......#............#.#.###..#.#.............#.....
..........#....#.....#...#......#............#....
........#......##......##......#..#.............#.
###..#......#.........##....#........##....#..#..#
...#......................#....................#..
#........#...........#......#....#....#.....#.....
........#......#..................................
........................#......................#..
........................#.......#.................
.............................#.........#.........#
..................#......#..#...#................#
.........#..#.....................................
....#.#.#........#.......#..##..................#.
.............................................#....
..........#........................#.........#....
..........#......#..............#........#...#....
#......#...............#..........................
.#....#........#......#.......#..#................
.........................................#........
......................#..#.........#..#.#...#....#

5R10L8R8L17R3L1L34R46R28R43L46R12L12L41R9L15R13L43R27R47L46R19L22R42L6R32L2R26L8R13L22R22R24L37R35R20L36R1L34L7L47L38R42R22L7R4L32L37L28L6L46R18L6L26L16L39R16L22R45R23L48L50R13L28L25L9L19R25L47L32L33L25R5L18L46R3L38R17L46L15L23R47L30L38R26L50R8R6L38R24L36L19L46L28L16L19L3L6R10R25L21L35R37R14R48L45L47L16L37R45L46L36L14R5R24L32L50R1R1L43R2L2R28L26R7L26L46L20L38L25L14R38L27R7L45L44R3L40L13L2L5L35L38L44R37R2R36R7L50R2L17R16R46L7L32R36R2L30R44R16R12R42R9L47R13L4R13R1L38R23R6L10R3R48R13R25L9L10L6L5L16R2L29R36R34R26R42R48L6R19R48R45L24L33R15R21L40L45R35R11R33R11R10R32R48R40R27R12L7L30R37R22R14R38L39R30L36L36R21R22L7L7R30R12R24R7R45L28R3R40L32L29R19L30L30R3L30L21L46R47L6R29L45R35L43L15L25L43R16R20R1R25R26R2L49R5L12L6L45R25L43R28R9L37L22R46L40R19R32L17R50R12R30L50L15R44L23L1R9L34L43R5R42L11R44R27R13L33R39L10R17R6L37R18R17L5L29R42L6L10R19L43L5L15L13R18R21R25L25L29R18L3R50L50R10R44R47L1L4R19R31R13L42L10R42L8R35L17R4L28R12R25L38L46R45L47R30L28R11R49L30L15L27L14L19L2R7L1L33R37R18L11L20L7L20R46L5L4R8L5L33R48L7L41L30R7L13L42R33R29L2R7L44L39R5L44L22R22R27L20L30R48R11L49R41L24R25L24R34R7L3R3L11L7L5L19R4R2L20L8R3L31L37L5R23L36R21L34L22L7L12R29L25R19L16L6R36L4R15L9L32R11R24R3R12L8R7L32L24L29R17L16L13R17R9R19L16R50L21R10R45L40R29L21R10R35L19L26L28R8L10R26L43L16R41R34R7R2L30R5R12R3L19L50L4L25L41L4R16L2R8L13L4R44L4L2R37L36L41R39R50R10R34L36L13R48R30L46R1L2R47L14L4R48R6L27L25L36L33R34R25L23R45L39L46L1R23R46L35L13R47L28L42R37R17L18L9L49L29R11R32R5R47L50L29L18L27R18R33R29R19L32R36R40L10R50L2R34R41L17L43R39L2L15L7L34L5R19R6L23L50L32L30R32L48L44R48R22L22R43L9R45L42R34R16R34R21L36L6L50R11L50L3L43R48L5L33L35L42R16R31R46L11L22R41L28R29L9L48L13L46R23L30L17L32R48L15L10L20R2L24R46L12L44R14L14L45R48L23L43R6R32R21L42R28L36R11L23L22L34L7L39R25R40L13L7L4R38L29R20L18R5R47R30R7L22L3R2L19L6R43L33L15L30R49L19L13L22R37L8R21R3L20L7R50R20R10R16R17R12L27R12L11R13L43R49R46R49R4L39R24L41R26L6R36R3L5L14R46L34R26L24R42R19L35L10R7L21L28R42L43R28L42R31R45L20R25L35L47R13R3L27R19L8L45R17L18L40R42L9L2R5L18R9L11R44R2R18L2R34R2L13R3L10L26L38R6L33R31L12R28L21L42L28L6L12R42L3L27R44L35R1L38L35L21R12R1L45L35R26R7L1L32R26L10R26L11R36L15R6R14R11L7R7R39L25R31R36L29R33L48L22R7R37L4R37L11L20L40L12L38R21R19L38L39L1R27L30L39R18R38L2L50R7L13L49L19L40R45R18R38L20L5R27L7R17L1R3R40L41L29R34L42L6R25R28L25R46L40L17L4L18R9R11L50L7R12L4L6L19R29L49R46R36R30L25L8L2L16R25R13R10L18R34L4R44L36R24L49L36L41R39L2L28R15R25R42L10L40L50R30L26R36R34R6L5L9R10L21L36R11R35R17L45R4R20L19L3R32L12R19L1L23L33L46R30R42R37L16L26L6R43R45R1R37R8L43L43L31R47R9R36L23L50L28R28L34R4R45L25L17L38R41R34L36L13R47R37L35L45R19R4L47R41L9L31L36R28L8R19L3L12R26L37R37R38R13R39R21R21R40L50R40L50L31L1R13L23L3L47R23L16R33R30R10R29L30L33L47L8R4R32L27R11L13L4R8L39L10L6L27R20L13L7R24L49L44L24R47R7L48L11L50L23L47R28R32R21R21L49R27L39L11R36R39L44R4L8R5R4L8R21L2L15R32L15R13R5L14R20L44L33L23L14R24L33R1R36L42L11R14L2R31L1L38L47R12L45R3L7L17L44L48R9R43R48L6L47L28L32L50R2L23R37L2R14R27L14L41R30R22R45L50L19L26L3R26L45L22R30R12R49L14R40R35R22L9L17R13L4R33L30R5L48L45L29R29L1R39R5L35L24R28R5L11L14L9L25L19L49R18R4R33L30R27L18L8L35L3L11L9L9L22L38L49L28L39L5R24L10R18L43R1R19L31R50R37R32L5L29R49L2L23L37L21L20L44L40L26R10L14L11L33R7L9L47L8L43L2L29L50L2R2R9R2L32R13L25R38R6L7L29L25L16R25L49L11R48R5L44R19L21L19R6R33R25L37L26R18R31L7L23L34L11R18L31R50R16R29R32L24R29L50R27L48L32L46R3R1R49L27R15R44L41R6L16R9L5L47R19L35L31L23L24R16R40R1R5R18R12L32L9L4R38R26R3L26L43L23R23R45R27R25L4L15L41L1R35R3L39L8L37L14R11R48L45L46L35L32R23R26L4R6R25L36L4L29R32R7L29R40L9R17R26L8R18R29R8R11R23L19L21L12L32R45R10R4L9R48L13L37R17R28R32L19R40L49R49L2R48R24R50L35L28R28L20L30L15L23R11R28R31L44L12R33L20L8R38L47L37L4R2L40L14R20L33R32R23L24R6L3L34L6R9R12L8R12L8R8R21L29L46R1L15R37L17L41L21R34R47R38L6R41L1L45R5L3L24L22R31R34R10R26L10R43L25R20R1R25R26L49L50L2R34L10L35L27L23L40L11R30R4R24L11L30R39R10R24L14L18R23R9R4R38R42L50L20L12R42L4R49R22L41R43R48R31R13R46L26R1R8L40R22R34L35R44L7R14L3L44L21R37L19L44L27R21L49R50R14L33R45L42R19R38R7R16R31L9R49R21R3R21R3L7L2R25R43L42L1L29R9R28R22R45L9L34R46R12R37R8L50R2R48L23R1L14L24L23R28R35L8L17L23R26R37R49L44R40R32R33L17L48L49L1L15R41R29L22L47R18L7L25R20R13R45L38L43L45R45R29L1L29L8R24L43L24R2L45L30R46L30L6L48L15R22L29L26R17L40L39R12R48L17L13L18L18R50R45L35R3R47R49R40L22L40R4R29R41R18L31R38L8L9R40L34L31R45L12L3L25L27R12R46L19R26L14R31R31R41L42L24R31R28R44L1R33L22L15L28L27L39L27L43R36L36L46L41R49R15R37R18R10L9R33L46R27L11R34L2R30R32L26L7L31L29R35L26R5R17R31L2R43R20L24R33R9L1R18R5R27L36R3R34L1R12L43R6L30R41R41L44R33L47R47L20R32R10L27L8R6R12L31R36L45R3L44L33R45R48L5L28L45L47L44L38R21L9L24R12L43L13L23R27L33L9L31R50L12L41L46R34L43R14R50L41L32R5R46R43L47R17L33R50R38R22L26L25L3L15R5R22R45L7L8L21L44R43L16L7R33L4R37L27R35L1L46L35R19L32L10R42L2L7R1R23R32R33L1R12R24R50R37R36R2R44L47R5L8R39L1L8L40R12L27L10L49L41R18R27R6R42R22L49R3R46L35L2L6L17L27L48L44R15L20R45L46R16R14R32L20R32L5R22L22R37L48L28R4R25L3R18R21L30L31R1R20L21L3R48R2R14R46R45L17R25R49L39R26L19R11L20L13R37R39L31R36R50R26L35R32L4R20L13L18L21L9L42L44L29L44R44R13L14R28L21R9R8R23R19R8L10R38L39L2L7R42R1R40R23L27L39L3L50L38L44R47L27R34L22L43R29L8L21R16R15L27R4R27R19L10L33L3L11L34L23L45L41L30L13L48R49R23R15L9R20L49L11L25R16L25R13R21R18R15R50R34R48L50R48R15L13L36R19L46L43R12L38R15L15R4R15R34R19R11R29R22L36R6R27L28R46R47R35R3L12R17L43R50L11L34R12L10L29L23R7L41L10R29L16R34R22L22L27L8R10L6L21R49L31R29R34L41L4R25R41R20R43R27R21L38L14R43R4R9L41R48L43L21R49L49L48L20L21R39R14R6R44R34L5L10R49R10R24L23R18R20L24R17R14L12L40R3R43R21R35R2L22L17L15R17R45L29R43R47R5L50R19L30R1L49R26L27R18L45R31L36R22L24R29R15R23R48L30R39L27L10R31L16L10R38L50R40L3L17R48R16L22L50L11L18L44R2L41L21R26R23L26R28L42R6
`
